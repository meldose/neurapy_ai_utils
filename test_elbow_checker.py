import pytest # imported pytest
from neurapy_ai_utils.robot.elbow_checker import ElbowChecker

@pytest.fixture(scope="session")
def robot_configurations():
    # (joint_positions: List[float], elbow_is_up: bool)
    return {
        "maira7M": [
            ((-2.339856232, 0.042306879999999936, -1.939617666, 2.4101307999999997, -1.724104592, 2.323519964, -0.652194084), True),
            ((-0.8639372500000002, -0.8059251199999999, -0.924884096, 2.1923131999999996, 1.964122068, 2.4190243000000002, 0.5598313379999995), True),
            ((-2.6496170059999997, 0.7912643199999998, 0.05780525599999997, -1.2676355999999998, -2.113033434, 0.767804596, -1.73101609), False),
            ((-2.1752369160000002, -1.42084096, -0.49511458399999997, 1.4372820000000002, -0.15393791000000023, -1.72473291, 3.02849276), False),
            ((1.1573617560000002, -1.75845824, 1.183122794, 1.9200412000000004, 3.04420071, -2.61066129, -0.46998186399999975), False),
        ],
        "maira7L": [
            ((-2.339856232, 0.042306879999999936, -1.939617666, 2.4101307999999997, -1.724104592, 2.323519964, -0.652194084), True),
            ((-0.8639372500000002, -0.8059251199999999, -0.924884096, 2.1923131999999996, 1.964122068, 2.4190243000000002, 0.5598313379999995), True),
            ((-2.6496170059999997, 0.7912643199999998, 0.05780525599999997, -1.2676355999999998, -2.113033434, 0.767804596, -1.73101609), False),
            ((-2.1752369160000002, -1.42084096, -0.49511458399999997, 1.4372820000000002, -0.15393791000000023, -1.72473291, 3.02849276), False),
            ((1.1573617560000002, -1.75845824, 1.183122794, 1.9200412000000004, 3.04420071, -2.61066129, -0.46998186399999975), False),
        ],
        "maira7XL": [
            ((-2.339856232, 0.042306879999999936, -1.939617666, 2.4101307999999997, -1.724104592, 2.323519964, -0.652194084), True),
            ((-0.8639372500000002, -0.8059251199999999, -0.924884096, 2.1923131999999996, 1.964122068, 2.4190243000000002, 0.5598313379999995), True),
            ((-2.6496170059999997, 0.7912643199999998, 0.05780525599999997, -1.2676355999999998, -2.113033434, 0.767804596, -1.73101609), False),
            ((-2.1752369160000002, -1.42084096, -0.49511458399999997, 1.4372820000000002, -0.15393791000000023, -1.72473291, 3.02849276), False),
            ((1.1573617560000002, -1.75845824, 1.183122794, 1.9200412000000004, 3.04420071, -2.61066129, -0.46998186399999975), False),
        ],
        "maira7S": [
            ((-2.339856232, 0.042306879999999936, -1.939617666, 2.4101307999999997, -1.724104592, 2.323519964, -0.652194084), True),
            ((-0.8639372500000002, -0.8059251199999999, -0.924884096, 2.1923131999999996, 1.964122068, 2.4190243000000002, 0.5598313379999995), True),
            ((-2.6496170059999997, 0.7912643199999998, 0.05780525599999997, -1.2676355999999998, -2.113033434, 0.767804596, -1.73101609), False),
            ((-2.1752369160000002, -1.42084096, -0.49511458399999997, 1.4372820000000002, -0.15393791000000023, -1.72473291, 3.02849276), False),
            ((1.1573617560000002, -1.75845824, 1.183122794, 1.9200412000000004, 3.04420071, -2.61066129, -0.46998186399999975), False),
        ],
        "maira6M": [
            ((0.0, 0.19813024000000024, 1.9456976000000004, -1.7831664839999999, 0.9336805479999999, 0.0), True),
            ((0.0, -0.8205859200000001, -1.9106163999999999, -1.9955379679999998, 0.29719441400000024, -0.46684027399999994), True),
            ((0.0, 1.75468832, -1.2733952000000002, -1.019131796, -1.613520624, 0.0), False),
            ((0.0, -2.0944, 1.9456976000000004, -1.9955379679999998, -0.08482293000000007, 1.2308749619999997), False)
        ],
        "maira6L": [
            ((0.0, 0.19813024000000024, 1.9456976000000004, -1.7831664839999999, 0.9336805479999999, 0.0), True),
            ((0.0, -0.8205859200000001, -1.9106163999999999, -1.9955379679999998, 0.29719441400000024, -0.46684027399999994), True),
            ((0.0, 1.75468832, -1.2733952000000002, -1.019131796, -1.613520624, 0.0), False),
            ((0.0, -2.0944, 1.9456976000000004, -1.9955379679999998, -0.08482293000000007, 1.2308749619999997), False)
        ],
        "maira6S": [
            ((0.0, 0.19813024000000024, 1.9456976000000004, -1.7831664839999999, 0.9336805479999999, 0.0), True),
            ((0.0, -0.8205859200000001, -1.9106163999999999, -1.9955379679999998, 0.29719441400000024, -0.46684027399999994), True),
            ((0.0, 1.75468832, -1.2733952000000002, -1.019131796, -1.613520624, 0.0), False),
            ((0.0, -2.0944, 1.9456976000000004, -1.9955379679999998, -0.08482293000000007, 1.2308749619999997), False)
        ],
        "maira6XL": [
            ((0.0, 0.19813024000000024, 1.9456976000000004, -1.7831664839999999, 0.9336805479999999, 0.0), True),
            ((0.0, -0.8205859200000001, -1.9106163999999999, -1.9955379679999998, 0.29719441400000024, -0.46684027399999994), True),
            ((0.0, 1.75468832, -1.2733952000000002, -1.019131796, -1.613520624, 0.0), False),
            ((0.0, -2.0944, 1.9456976000000004, -1.9955379679999998, -0.08482293000000007, 1.2308749619999997), False)
        ],
        "lara3": [
            ((0.0, -0.85698816, -1.0578102200000001, 0.0, 0.0, 0.0), True),
            ((0.0, -0.8205859200000001, -1.9106163999999999, -1.9955379679999998, 0.29719441400000024, -0.46684027399999994), True),
            ((2.5980949299999994, -0.25606280000000003, 1.97732754, 1.7159364579999998, -0.3851589340000001, 2.451696836), True),
            ((2.8425106319999998, -0.38338943999999997, 2.5190182200000004, 3.0473422999999995, -2.5415463099999998, -0.08984947399999976), True),
            ((0.0, -1.80935384, 0.3877419800000004, 0.0, 0.0, 0.0), False),
            ((0.0, 1.1746000000000003, -0.98735912, 0.0, 0.0, 0.0), False),
            ((0.0, 1.3014568000000004, -0.98735912, 0.0, 1.4859720699999999, 0.29719441400000024), False),
            ((-1.002795528, 1.7332397600000005, -1.45651126, 2.6106612899999995, -1.9125999919999999, -1.742325814), False),
            ((0.0, 1.3014568000000004, -0.98735912, -2.9292185159999997, 1.4859720699999999, 0.29719441400000024), False),
            ((1.877414184, -1.6430304800000002, 1.5895855599999997, 2.98765209, 2.9260769259999995, -2.82743), False),
        ],
        "lara5": [
            ((0.0, -0.85698816, -1.0578102200000001, 0.0, 0.0, 0.0), True),
            ((0.0, -0.8205859200000001, -1.9106163999999999, -1.9955379679999998, 0.29719441400000024, -0.46684027399999994), True),
            ((2.5980949299999994, -0.25606280000000003, 1.97732754, 1.7159364579999998, -0.3851589340000001, 2.451696836), True),
            ((2.8425106319999998, -0.38338943999999997, 2.5190182200000004, 3.0473422999999995, -2.5415463099999998, -0.08984947399999976), True),
            ((0.0, -1.80935384, 0.3877419800000004, 0.0, 0.0, 0.0), False),
            ((0.0, 1.1746000000000003, -0.98735912, 0.0, 0.0, 0.0), False),
            ((0.0, 1.3014568000000004, -0.98735912, 0.0, 1.4859720699999999, 0.29719441400000024), False),
            ((-1.002795528, 1.7332397600000005, -1.45651126, 2.6106612899999995, -1.9125999919999999, -1.742325814), False),
            ((0.0, 1.3014568000000004, -0.98735912, -2.9292185159999997, 1.4859720699999999, 0.29719441400000024), False),
            ((1.877414184, -1.6430304800000002, 1.5895855599999997, 2.98765209, 2.9260769259999995, -2.82743), False),
        ],
        "lara8": [
            ((0.0, -0.85698816, -1.0578102200000001, 0.0, 0.0, 0.0), True),
            ((0.0, -0.8205859200000001, -1.9106163999999999, -1.9955379679999998, 0.29719441400000024, -0.46684027399999994), True),
            ((2.5980949299999994, -0.25606280000000003, 1.97732754, 1.7159364579999998, -0.3851589340000001, 2.451696836), True),
            ((2.8425106319999998, -0.38338943999999997, 2.5190182200000004, 3.0473422999999995, -2.5415463099999998, -0.08984947399999976), True),
            ((0.0, -1.80935384, 0.3877419800000004, 0.0, 0.0, 0.0), False),
            ((0.0, 1.1746000000000003, -0.98735912, 0.0, 0.0, 0.0), False),
            ((0.0, 1.3014568000000004, -0.98735912, 0.0, 1.4859720699999999, 0.29719441400000024), False),
            ((-1.002795528, 1.7332397600000005, -1.45651126, 2.6106612899999995, -1.9125999919999999, -1.742325814), False),
            ((0.0, 1.3014568000000004, -0.98735912, -2.9292185159999997, 1.4859720699999999, 0.29719441400000024), False),
            ((1.877414184, -1.6430304800000002, 1.5895855599999997, 2.98765209, 2.9260769259999995, -2.82743), False),
        ],
        # ... other robots ...
    }


@pytest.fixture(scope="function")
def robot_and_config(request, robot_configurations):
    robot_name = request.param
    configs = robot_configurations[robot_name]
    return robot_name, configs

@pytest.mark.parametrize("robot_name", [
    ("maira7M", 7),
    ("maira7L", 7),
    ("maira7S", 7),
    ("maira7XL", 7),
    ("maira6M", 6),
    ("maira6L", 6),
    ("maira6S", 6),
    ("maira6XL", 6),
    ("lara3", 6),
    ("lara5", 6),
    ("lara8", 6),
])
def test_elbow_positions(robot_name, robot_configurations):
    configs = robot_configurations[robot_name[0]]
    checker = ElbowChecker(dof=robot_name[1], robot_name=robot_name[0])

    for config, expected_up in configs:
        assert checker.is_up(config) == expected_up